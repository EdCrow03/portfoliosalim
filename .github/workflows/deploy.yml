name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  preparation:
    name: Préparation & Connexion Docker
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Cloner le repo
        uses: actions/checkout@v3

      - name: 🐳 Connexion à DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.dockerusername }}
          password: ${{ secrets.dockerpassword }}

  build-and-push:
    name: Build et Push de l'image Docker
    runs-on: ubuntu-latest
    needs: preparation
    steps:
      - name: 📥 Cloner le repo
        uses: actions/checkout@v3

      - name: 🔧 Build de l'image Docker
        run: docker build -t ${{ secrets.dockerusername }}/portfolio:latest .

      - name: 📤 Push de l'image vers DockerHub
        run: docker push ${{ secrets.dockerusername }}/portfolio:latest

  deploy:
    name: Déploiement Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: 📁 Créer dossier kubeconfig
        run: mkdir -p $HOME/.kube

      - name: 🔐 Récupérer et écrire kubeconfig
        run: echo "${{ secrets.KUBE_CONFIG_DATA }}" > $HOME/.kube/config

      - name: 🔒 Appliquer les droits sur kubeconfig
        run: chmod 600 $HOME/.kube/config

      - name: ☸️ Appliquer les manifests Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: 🐳 Mettre à jour l'image dans le déploiement
        run: |
          kubectl set image deployment/portfolio-deployment portfolio=${{ secrets.dockerusername }}/portfolio:latest

      - name: 🔍 Vérifier l’état des pods
        run: |
          kubectl get pods -n default
          kubectl describe pods -l app=portfolio -n default

      - name: 📜 Afficher les logs du pod (dernier pod créé)
        run: |
          POD_NAME=$(kubectl get pods -l app=portfolio -n default -o jsonpath="{.items[0].metadata.name}")
          kubectl logs $POD_NAME -n default
